#!/bin/bash

# Usage 

for ARGUMENT in "$@"
do
   KEY=$(echo $ARGUMENT | cut -f1 -d=)

   KEY_LENGTH=${#KEY}
   VALUE="${ARGUMENT:$KEY_LENGTH+1}"

   export "$KEY"="$VALUE"
done

printf "ip is %s\n" "$ip"
printf "slo constraint is %d x\n" "${slo-10}"
printf "fill %s\n" "$fill"
printf "thread count %s\n" "${thread-1}"
printf "connection count %s\n" "${conns-4}"
printf "duration %s\n" "${duration-10m}"

if [[ "$fill" = "true" ]]
then
    echo "filling"
    python3 scripts/write_movie_info.py -c datasets/tmdb/casts.json -m datasets/tmdb/movies.json --server_address http://$ip:8080 && scripts/register_users.sh && scripts/register_movies.sh
    echo "filled"
fi

initial_delay=0

run() {
    local res=`../wrk2/wrk -D exp -t ${thread-1} -c ${conns-4} -d $2 -L -s ./wrk2/scripts/media-microservices/compose-review.lua http://$ip:8080/wrk2-api/review/compose -R $1 | awk '/99.000%/ {print $2}'`
    if [[ $res == *ms ]]
    then
        res=`echo $res | sed 's/ms//'`
    elif [[ $res == *us ]]
    then
        res=`echo $res | sed 's/us//'`
        res=`echo "scale=3; $res/1000" | bc`
    elif [[ $res == *s ]]
    then
        res=`echo $res | sed 's/s//'`
        res=`echo "scale=3; $res*1000" | bc`
    fi
    echo $res
}
initial_delay=`run 1 10m`
echo "initial delay is $initial_delay"
run $rps ${duration-20m}



